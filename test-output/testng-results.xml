<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-17T09:07:37 GMT" name="Suite" finished-at="2025-03-17T09:07:48 GMT" duration-ms="11645">
    <groups>
    </groups>
    <test started-at="2025-03-17T09:07:37 GMT" name="Test2" finished-at="2025-03-17T09:07:41 GMT" duration-ms="4284">
      <class name="tests.Failintentional">
        <test-method signature="failedTest()[pri:0, instance:tests.Failintentional@415b0b49]" started-at="2025-03-17T09:07:37 GMT" name="failedTest" finished-at="2025-03-17T09:07:40 GMT" duration-ms="3844" status="FAIL">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
at org.testng.AssertJUnit.fail(AssertJUnit.java:65)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:23)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:33)
at tests.Failintentional.failedTest(Failintentional.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Failintentional@415b0b49]" started-at="2025-03-17T09:07:41 GMT" name="tearDown" finished-at="2025-03-17T09:07:41 GMT" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Failintentional -->
    </test> <!-- Test2 -->
    <test started-at="2025-03-17T09:07:37 GMT" name="Test" finished-at="2025-03-17T09:07:46 GMT" duration-ms="9564">
      <class name="tests.RegisterUserExistingEmail">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterUserExistingEmail@4d14b6c2]" started-at="2025-03-17T09:07:37 GMT" name="setUp" finished-at="2025-03-17T09:07:42 GMT" duration-ms="5420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="existingEmailRegister()[pri:0, instance:tests.RegisterUserExistingEmail@4d14b6c2]" started-at="2025-03-17T09:07:42 GMT" name="existingEmailRegister" finished-at="2025-03-17T09:07:46 GMT" duration-ms="4028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- existingEmailRegister -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterUserExistingEmail@4d14b6c2]" started-at="2025-03-17T09:07:46 GMT" name="tearDown" finished-at="2025-03-17T09:07:46 GMT" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.RegisterUserExistingEmail -->
    </test> <!-- Test -->
    <test started-at="2025-03-17T09:07:37 GMT" name="Test1" finished-at="2025-03-17T09:07:48 GMT" duration-ms="11645">
      <class name="tests.LogoutUser">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LogoutUser@565f390]" started-at="2025-03-17T09:07:37 GMT" name="setUp" finished-at="2025-03-17T09:07:40 GMT" duration-ms="3774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="logout()[pri:0, instance:tests.LogoutUser@565f390]" started-at="2025-03-17T09:07:40 GMT" name="logout" finished-at="2025-03-17T09:07:48 GMT" duration-ms="7776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LogoutUser@565f390]" started-at="2025-03-17T09:07:48 GMT" name="tearDown" finished-at="2025-03-17T09:07:48 GMT" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LogoutUser -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
